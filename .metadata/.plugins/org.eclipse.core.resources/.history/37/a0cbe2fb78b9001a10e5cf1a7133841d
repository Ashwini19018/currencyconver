package com.ms.boot.CurrencyConvertms.service;

import org.springframework.cloud.netflix.ribbon.RibbonClient;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

//import com.ms.boot.CurrencyConvertms.model.ConvertCurrencyRequest;
//import com.ms.boot.CurrencyConvertms.model.ConvertCurrencyResponse;

//@FeignClient(name = "ConvertCurrencyms", fallback = ConvertCurrencytFallback.class)
 @FeignClient(name="currencyconversion", url="localhost:8081")  
 @RibbonClient(name="currencyconversion")
public interface ConvertCurrencyProxy {

	@GetMapping("/currencyconversion/countrycode/{countrycode}")		//where {from} and {to} are path variable
	public CurrencyConversionBean retrieveExchangeValue(@PathVariable("from") String from, @PathVariable("to") String to); //from map to USD and to map to INR
	}	
	//@RequestMapping(value = "/caldisc", method = RequestMethod.POST)
	//public ConvertCurrencyproxy calculateDiscount(ConvertCurrencyproxy dRequest);

}

