package com.ms.boot.ConvertCurrencyms.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


import com.ms.boot.CurrencyConvertms.service.CurrencyConvertService;
import com.ms.boot.ConvertCurrencyms.model.ConvertCurrencyDTO;
import com.ms.boot.CurrencyConvertms.repo.CurrencyConvertRepository;

import java.math.BigDecimal;
import java.util.List;
import java.util.Optional;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController

public class ConvertCurrencyController {
	
	@GetMapping("/currency-converter/countrycode/{countrycode}/amount/{amount}")   
	//returns a bean back  
	public ConvertCurrencyDTO convertCurrency(@PathVariable String countrycode,  @PathVariableBigDecimal amount)  
	{  
	//setting variables to currency exchange service  
	Map<String, String>uriVariables=new HashMap<>();  
	uriVariables.put("countrycode", countrycode);  
	uriVariables.put("amount", amount);  
 
	ResponseEntity<CurrencyConversionBean>responseEntity=new RestTemplate().getForEntity("http://localhost:8000/currency-exchange/from/{from}/to/{to}", CurrencyConversionBean.class, uriVariables);  
	CurrencyConversionBean response=responseEntity.getBody();  
  
	return new CurrencyConversionBean(response.getId(), from,to,response.getConversionMultiple(), quantity,quantity.multiply(response.getConversionMultiple()),response.getPort());  
	}  
	}  
